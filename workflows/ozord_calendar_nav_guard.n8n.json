{
  "name": "ozord_calendar_nav_guard",
  "nodes": [
    {
      "parameters": {},
      "id": "d4e5f6a7-0001-0000-0000-000000000001",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        -1200,
        200
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1",
              "name": "user_id",
              "value": "={{ $json.userId || $json.user_id }}",
              "type": "string"
            },
            {
              "id": "2",
              "name": "chat_id",
              "value": "={{ $json.chatId || $json.chat_id }}",
              "type": "string"
            },
            {
              "id": "3",
              "name": "callback_data",
              "value": "={{ $json.callbackData || $json.callback_data }}",
              "type": "string"
            },
            {
              "id": "4",
              "name": "callback_query_id",
              "value": "={{ $json.callbackQueryId || $json.callback_query_id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "d4e5f6a7-0001-0000-0000-000000000002",
      "name": "Extract User Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1000,
        200
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Parse callback_data: cal:YYYY-MM:prev|next\nconst { callback_data, user_id, chat_id, callback_query_id } = $input.first().json;\n\nconst m = /^cal:(\\d{4}-\\d{2}):(prev|next)$/.exec(callback_data || '');\n\nif (!m) {\n  return {\n    json: {\n      valid: false,\n      reason: 'bad_format',\n      user_id,\n      chat_id,\n      callback_query_id\n    }\n  };\n}\n\nconst month = m[1];\nconst dir = m[2];\n\n// Shift month by delta\nfunction shiftMonth(ym, delta) {\n  const [y, m] = ym.split('-').map(Number);\n  const d = new Date(Date.UTC(y, m - 1 + delta, 1));\n  const yy = d.getUTCFullYear();\n  const mm = String(d.getUTCMonth() + 1).padStart(2, '0');\n  return `${yy}-${mm}`;\n}\n\nconst target = dir === 'prev' ? shiftMonth(month, -1) : shiftMonth(month, 1);\n\nreturn {\n  json: {\n    valid: true,\n    user_id,\n    chat_id,\n    callback_query_id,\n    month,\n    dir,\n    target\n  }\n};"
      },
      "id": "d4e5f6a7-0001-0000-0000-000000000003",
      "name": "Parse cal:*",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -800,
        200
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "key": "=ozon:sess:{{ $json.user_id }}:csv",
        "options": {}
      },
      "id": "d4e5f6a7-0001-0000-0000-000000000004",
      "name": "Get sess:csv",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -600,
        200
      ],
      "credentials": {
        "redis": {
          "id": "LbugIO49LKl0p0wh",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Check if target month is in range\nconst prevData = $('Parse cal:*').first().json;\nconst { target, user_id, chat_id, callback_query_id } = prevData;\n\nlet sess = {};\ntry {\n  const raw = $input.first().json.value;\n  sess = raw ? JSON.parse(raw) : {};\n} catch (e) {\n  sess = {};\n}\n\nconst months = Array.isArray(sess.months) ? sess.months : [];\nconst minMonth = months[0] || null;\nconst maxMonth = months.length ? months[months.length - 1] : null;\n\nconst inRange = !!(minMonth && maxMonth && target >= minMonth && target <= maxMonth);\n\nreturn {\n  json: {\n    minMonth,\n    maxMonth,\n    inRange,\n    target,\n    user_id,\n    chat_id,\n    callback_query_id,\n    session: sess\n  }\n};"
      },
      "id": "d4e5f6a7-0001-0000-0000-000000000005",
      "name": "Check Range",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -400,
        200
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "1",
              "leftValue": "={{ $json.inRange }}",
              "rightValue": "=true",
              "operator": {
                "type": "boolean",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d4e5f6a7-0001-0000-0000-000000000006",
      "name": "In Range?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -200,
        200
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.telegram.org/bot{{ $env.TELEGRAM_BOT_TOKEN }}/answerCallbackQuery",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ JSON.stringify({\n  callback_query_id: $json.callback_query_id,\n  text: 'Дальше нет данных',\n  show_alert: false\n}) }}",
        "options": {}
      },
      "id": "d4e5f6a7-0001-0000-0000-000000000007",
      "name": "AnswerCallback (no data)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        0,
        80
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1",
              "name": "month",
              "value": "={{ $json.target }}",
              "type": "string"
            },
            {
              "id": "2",
              "name": "user_id",
              "value": "={{ $json.user_id }}",
              "type": "string"
            },
            {
              "id": "3",
              "name": "chat_id",
              "value": "={{ $json.chat_id }}",
              "type": "string"
            },
            {
              "id": "4",
              "name": "session",
              "value": "={{ $json.session }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "id": "d4e5f6a7-0001-0000-0000-000000000008",
      "name": "Set Month Context",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        0,
        320
      ]
    },
    {
      "parameters": {
        "workflowId": "={{ $workflow.id }}",
        "options": {}
      },
      "id": "d4e5f6a7-0001-0000-0000-000000000009",
      "name": "Call calendar_ui_header",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.1,
      "position": [
        200,
        320
      ]
    },
    {
      "parameters": {
        "content": "## Calendar Navigation Guard\n\nЗащита навигации prev/next:\n- Парсит cal:YYYY-MM:prev|next\n- Проверяет target месяц vs minMonth/maxMonth\n- Если вне диапазона → toast \"Дальше нет данных\"\n- Если ок → рендер календаря\n\nИспользует:\n- ozon:sess:<uid>:csv (months[])\n- calendar_ui_header_and_counters",
        "height": 260,
        "width": 340
      },
      "id": "d4e5f6a7-0001-0000-0000-000000000099",
      "name": "Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1200,
        -40
      ]
    }
  ],
  "connections": {
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Extract User Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract User Data": {
      "main": [
        [
          {
            "node": "Parse cal:*",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse cal:*": {
      "main": [
        [
          {
            "node": "Get sess:csv",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get sess:csv": {
      "main": [
        [
          {
            "node": "Check Range",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Range": {
      "main": [
        [
          {
            "node": "In Range?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "In Range?": {
      "main": [
        [
          {
            "node": "AnswerCallback (no data)",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Month Context",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Month Context": {
      "main": [
        [
          {
            "node": "Call calendar_ui_header",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-10-07T00:00:00.000Z",
  "versionId": "00000000-0000-0000-0000-000000000001"
}
