{
  "name": "ozord_unified_router_callbacks",
  "nodes": [
    {
      "parameters": {},
      "id": "e5f6a7b8-0001-0000-0000-000000000001",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        -1080,
        180
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "/* INPUT: { context:{ user_id, chat_id, callback_data, callback_query_id } }\n   OUTPUT: { route, args, context }\n*/\nconst ctx = $input.first().json.context || $input.first().json || {};\nconst data = String(ctx.callback_data || ctx.callbackData || '');\n\nfunction parse() {\n  if (data === 'noop') return { route: 'noop' };\n  if (data === 'menu:orders') return { route: 'menu:orders' };\n  if (data === 'menu:upload') return { route: 'menu:upload' };\n  if (data === 'menu:calendar') return { route: 'menu:calendar' };\n  if (data === 'file:clear') return { route: 'file:clear' };\n  \n  let m;\n  m = /^cal:(\\d{4}-\\d{2}):(prev|next)$/.exec(data);\n  if (m) return { route: 'cal', args: { month: m[1], dir: m[2] } };\n  \n  m = /^date:(\\d{4}-\\d{2}-\\d{2})$/.exec(data);\n  if (m) return { route: 'date', args: { day: m[1] } };\n  \n  if (data === 'dates:done') return { route: 'dates:done' };\n  if (data === 'dates:reset') return { route: 'dates:reset' };\n  \n  return { route: 'unknown', args: { raw: data } };\n}\n\nconst parsed = parse();\n\nreturn {\n  json: {\n    route: parsed.route,\n    args: parsed.args || {},\n    context: ctx\n  }\n};"
      },
      "id": "e5f6a7b8-0001-0000-0000-000000000002",
      "name": "Parse callback_data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -860,
        180
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "1",
              "leftValue": "={{ $json.route }}",
              "rightValue": "=noop",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e5f6a7b8-0001-0000-0000-000000000003",
      "name": "route == noop",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -600,
        40
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "1",
              "leftValue": "={{ $json.route }}",
              "rightValue": "=menu:orders",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e5f6a7b8-0001-0000-0000-000000000004",
      "name": "route == menu:orders",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -600,
        140
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "1",
              "leftValue": "={{ $json.route }}",
              "rightValue": "=menu:calendar",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e5f6a7b8-0001-0000-0000-000000000005",
      "name": "route == menu:calendar",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -600,
        240
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "1",
              "leftValue": "={{ $json.route }}",
              "rightValue": "=file:clear",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e5f6a7b8-0001-0000-0000-000000000006",
      "name": "route == file:clear",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -600,
        340
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "1",
              "leftValue": "={{ $json.route }}",
              "rightValue": "=cal",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e5f6a7b8-0001-0000-0000-000000000007",
      "name": "route == cal:*",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -600,
        440
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "1",
              "leftValue": "={{ $json.route }}",
              "rightValue": "=date",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e5f6a7b8-0001-0000-0000-000000000008",
      "name": "route == date:*",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -600,
        540
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "1",
              "leftValue": "={{ $json.route }}",
              "rightValue": "=dates:done",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e5f6a7b8-0001-0000-0000-000000000009",
      "name": "route == dates:done",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -600,
        640
      ]
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "5rr4qcl6EhKmqU2Y",
          "mode": "id"
        },
        "options": {}
      },
      "id": "e5f6a7b8-0001-0000-0000-000000000010",
      "name": "→ orders_menu_render",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.1,
      "position": [
        -340,
        140
      ]
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "jY98upBVzlyy5IWI",
          "mode": "id"
        },
        "options": {}
      },
      "id": "e5f6a7b8-0001-0000-0000-000000000011",
      "name": "→ calendar_ui_header",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.1,
      "position": [
        -340,
        240
      ]
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "yr11w5vNVacmw1JL",
          "mode": "id"
        },
        "options": {}
      },
      "id": "e5f6a7b8-0001-0000-0000-000000000012",
      "name": "→ files_session_clear",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.1,
      "position": [
        -340,
        340
      ]
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "d8oh1GRJYCfmewOO",
          "mode": "id"
        },
        "options": {}
      },
      "id": "e5f6a7b8-0001-0000-0000-000000000013",
      "name": "→ calendar_nav_guard",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.1,
      "position": [
        -340,
        440
      ]
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "WZAncgLUdxNgw1UC",
          "mode": "id"
        },
        "options": {}
      },
      "id": "e5f6a7b8-0001-0000-0000-000000000014",
      "name": "→ dates_toggle_limit",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.1,
      "position": [
        -340,
        540
      ]
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "O4Oo5unMb4J5AKS9",
          "mode": "id"
        },
        "options": {}
      },
      "id": "e5f6a7b8-0001-0000-0000-000000000015",
      "name": "→ dates_done_guard",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.1,
      "position": [
        -340,
        640
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.telegram.org/bot{{ $env.TELEGRAM_BOT_TOKEN }}/answerCallbackQuery",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ JSON.stringify({\n  callback_query_id: $json.context.callback_query_id || $json.context.callbackQueryId,\n  text: 'Неизвестная команда',\n  show_alert: false\n}) }}",
        "options": {}
      },
      "id": "e5f6a7b8-0001-0000-0000-000000000016",
      "name": "AnswerCallback (unknown)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -340,
        740
      ]
    },
    {
      "parameters": {
        "content": "## Unified Router: Callbacks\n\nЦентрализованный роутинг для callback_query.\n\nПрефиксы:\n- menu:orders, menu:calendar, menu:upload\n- file:clear\n- cal:YYYY-MM:prev|next\n- date:YYYY-MM-DD\n- dates:done, dates:reset\n- noop\n\nНаправляет в соответствующие sub-workflows.",
        "height": 280,
        "width": 360
      },
      "id": "e5f6a7b8-0001-0000-0000-000000000099",
      "name": "Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1080,
        -100
      ]
    }
  ],
  "connections": {
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Parse callback_data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse callback_data": {
      "main": [
        [
          {
            "node": "route == noop",
            "type": "main",
            "index": 0
          },
          {
            "node": "route == menu:orders",
            "type": "main",
            "index": 0
          },
          {
            "node": "route == menu:calendar",
            "type": "main",
            "index": 0
          },
          {
            "node": "route == file:clear",
            "type": "main",
            "index": 0
          },
          {
            "node": "route == cal:*",
            "type": "main",
            "index": 0
          },
          {
            "node": "route == date:*",
            "type": "main",
            "index": 0
          },
          {
            "node": "route == dates:done",
            "type": "main",
            "index": 0
          },
          {
            "node": "AnswerCallback (unknown)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "route == menu:orders": {
      "main": [
        [
          {
            "node": "→ orders_menu_render",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "route == menu:calendar": {
      "main": [
        [
          {
            "node": "→ calendar_ui_header",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "route == file:clear": {
      "main": [
        [
          {
            "node": "→ files_session_clear",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "route == cal:*": {
      "main": [
        [
          {
            "node": "→ calendar_nav_guard",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "route == date:*": {
      "main": [
        [
          {
            "node": "→ dates_toggle_limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "route == dates:done": {
      "main": [
        [
          {
            "node": "→ dates_done_guard",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-10-07T00:00:00.000Z",
  "versionId": "00000000-0000-0000-0000-000000000001"
}