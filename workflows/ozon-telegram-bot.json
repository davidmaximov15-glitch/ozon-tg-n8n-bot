{
  "name": "Ozon Telegram Bot - Orders Analytics",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message",
          "callback_query"
        ],
        "additionalFields": {
          "download": true
        }
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [240, 300],
      "id": "a1b2c3d4-1234-5678-9abc-def012345678",
      "name": "Telegram Trigger"
    },
    {
      "parameters": {
        "jsCode": "// Extract user data\nconst message = $json.message;\nconst callback = $json.callback_query;\n\nconst userId = message?.from?.id || callback?.from?.id;\nconst chatId = message?.chat?.id || callback?.message?.chat?.id;\nconst messageText = message?.text || '';\nconst callbackData = callback?.data || '';\nconst document = message?.document || null;\n\nreturn [{\n  json: {\n    user_id: userId,\n    chat_id: chatId,\n    message_text: messageText,\n    callback_data: callbackData,\n    document: document\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [460, 300],
      "id": "b2c3d4e5-2345-6789-abcd-ef0123456789",
      "name": "Extract User Data"
    },
    {
      "parameters": {
        "operation": "sIsMember",
        "key": "ozon:acl:whitelist",
        "member": "={{ $json.user_id }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [680, 300],
      "id": "c3d4e5f6-3456-7890-bcde-f01234567890",
      "name": "Check Whitelist"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "condition1",
              "leftValue": "={{ $json.response }}",
              "rightValue": "1",
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [900, 300],
      "id": "d4e5f6a7-4567-8901-cdef-012345678901",
      "name": "Is Authorized?"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message?.chat?.id || $('Telegram Trigger').item.json.callback_query?.message?.chat?.id }}",
        "text": "‚õî –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –í—ã –Ω–µ –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ.\n\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞.",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [1120, 460],
      "id": "e5f6a7b8-5678-9012-def0-123456789012",
      "name": "Unauthorized Response"
    },
    {
      "parameters": {
        "operation": "sIsMember",
        "key": "ozon:acl:admins",
        "member": "={{ $json.user_id }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [1120, 140],
      "id": "f6a7b8c9-6789-0123-ef01-234567890123",
      "name": "Check Admin"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "cond-start",
                    "leftValue": "={{ $json.message_text }}",
                    "rightValue": "/start",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Start"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "cond-csv",
                    "leftValue": "={{ $json.document?.mime_type }}",
                    "rightValue": "text/csv",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CSV"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "cond-menu",
                    "leftValue": "={{ $json.callback_data }}",
                    "rightValue": "menu:",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Menu"
            }
          ]
        },
        "options": {
          "fallbackOutput": "none"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [1340, 140],
      "id": "a7b8c9d0-7890-1234-f012-345678901234",
      "name": "Route Message"
    },
    {
      "parameters": {
        "jsCode": "const chatId = $('Telegram Trigger').item.json.message?.chat?.id || $('Telegram Trigger').item.json.callback_query?.message?.chat?.id;\nconst isAdmin = $json.response === 1;\n\nconst keyboard = {\n  inline_keyboard: [\n    [{text: 'üì¶ –ó–∞–∫–∞–∑—ã', callback_data: 'menu:orders'}],\n    [{text: 'üéØ –ö–ª–∞—Å—Ç–µ—Ä—ã', callback_data: 'menu:clusters'}]\n  ]\n};\n\nif (isAdmin) {\n  keyboard.inline_keyboard.push([{text: '‚öôÔ∏è –ê–¥–º–∏–Ω–∫–∞', callback_data: 'menu:admin'}]);\n}\n\nreturn [{\n  json: {\n    chat_id: chatId,\n    text: 'ü§ñ **Ozon Analytics Bot**\\n\\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:',\n    reply_markup: keyboard\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1560, 60],
      "id": "b8c9d0e1-8901-2345-0123-456789012345",
      "name": "Generate Main Menu"
    },
    {
      "parameters": {
        "chatId": "={{ $json.chat_id }}",
        "text": "={{ $json.text }}",
        "additionalFields": {
          "parse_mode": "Markdown",
          "reply_markup": "={{ JSON.stringify($json.reply_markup) }}"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [1780, 60],
      "id": "c9d0e1f2-9012-3456-1234-567890123456",
      "name": "Send Menu"
    },
    {
      "parameters": {
        "jsCode": "const chatId = $('Telegram Trigger').item.json.message?.chat?.id;\nconst callbackData = $('Extract User Data').item.json.callback_data;\n\nconst action = callbackData.replace('menu:', '');\n\nlet text = '';\nlet keyboard = {inline_keyboard: [[{text: '¬´ –ù–∞–∑–∞–¥', callback_data: '/start'}]]};\n\nif (action === 'orders') {\n  text = 'üì¶ **–†–∞–∑–¥–µ–ª: –ó–∞–∫–∞–∑—ã**\\n\\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ CSV —Ñ–∞–π–ª —Å –æ—Ç—á–µ—Ç–æ–º Ozon (FBO –∏–ª–∏ FBS) –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.\\n\\n*–§–æ—Ä–º–∞—Ç:* –¥–æ 20MB, .csv';\n} else if (action === 'clusters') {\n  text = 'üéØ **–†–∞–∑–¥–µ–ª: –ö–ª–∞—Å—Ç–µ—Ä—ã**\\n\\nüöß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.';\n} else if (action === 'admin') {\n  text = '‚öôÔ∏è **–ê–¥–º–∏–Ω–∫–∞**\\n\\n–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–æ–º:';\n  keyboard = {\n    inline_keyboard: [\n      [{text: 'üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏', callback_data: 'admin:users'}],\n      [{text: '¬´ –ù–∞–∑–∞–¥', callback_data: '/start'}]\n    ]\n  };\n}\n\nreturn [{\n  json: {\n    chat_id: chatId,\n    text: text,\n    reply_markup: keyboard\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1560, 240],
      "id": "d0e1f2a3-0123-4567-2345-678901234567",
      "name": "Handle Menu"
    },
    {
      "parameters": {
        "chatId": "={{ $json.chat_id }}",
        "text": "={{ $json.text }}",
        "additionalFields": {
          "parse_mode": "Markdown",
          "reply_markup": "={{ JSON.stringify($json.reply_markup) }}"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [1780, 240],
      "id": "e1f2a3b4-1234-5678-3456-789012345678",
      "name": "Send Menu Response"
    },
    {
      "parameters": {
        "jsCode": "const chatId = $('Telegram Trigger').item.json.message?.chat?.id;\nconst document = $('Extract User Data').item.json.document;\n\nif (!document || document.mime_type !== 'text/csv') {\n  return [{\n    json: {\n      chat_id: chatId,\n      text: '‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ CSV',\n      reply_markup: null\n    }\n  }];\n}\n\nif (document.file_size > 20 * 1024 * 1024) {\n  return [{\n    json: {\n      chat_id: chatId,\n      text: '‚ùå –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º—É–º: 20MB',\n      reply_markup: null\n    }\n  }];\n}\n\nreturn [{\n  json: {\n    chat_id: chatId,\n    text: '‚è≥ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é CSV —Ñ–∞–π–ª...\\n\\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.',\n    reply_markup: null\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1560, 420],
      "id": "f2a3b4c5-2345-6789-4567-890123456789",
      "name": "Handle CSV"
    },
    {
      "parameters": {
        "chatId": "={{ $json.chat_id }}",
        "text": "={{ $json.text }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [1780, 420],
      "id": "a3b4c5d6-3456-7890-5678-901234567890",
      "name": "Send CSV Response"
    }
  ],
  "connections": {
    "Telegram Trigger": {
      "main": [[{"node": "Extract User Data", "type": "main", "index": 0}]]
    },
    "Extract User Data": {
      "main": [[{"node": "Check Whitelist", "type": "main", "index": 0}]]
    },
    "Check Whitelist": {
      "main": [[{"node": "Is Authorized?", "type": "main", "index": 0}]]
    },
    "Is Authorized?": {
      "main": [
        [{"node": "Check Admin", "type": "main", "index": 0}],
        [{"node": "Unauthorized Response", "type": "main", "index": 0}]
      ]
    },
    "Check Admin": {
      "main": [[{"node": "Route Message", "type": "main", "index": 0}]]
    },
    "Route Message": {
      "main": [
        [{"node": "Generate Main Menu", "type": "main", "index": 0}],
        [{"node": "Handle CSV", "type": "main", "index": 0}],
        [{"node": "Handle Menu", "type": "main", "index": 0}]
      ]
    },
    "Generate Main Menu": {
      "main": [[{"node": "Send Menu", "type": "main", "index": 0}]]
    },
    "Handle Menu": {
      "main": [[{"node": "Send Menu Response", "type": "main", "index": 0}]]
    },
    "Handle CSV": {
      "main": [[{"node": "Send CSV Response", "type": "main", "index": 0}]]
    }
  },
  "pinData": {},
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1",
  "meta": {
    "instanceId": "ozon-bot-instance"
  },
  "tags": []
}
