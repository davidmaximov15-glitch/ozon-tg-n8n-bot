{
  "name": "Ozon Telegram Bot - Orders Analytics",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message",
          "callback_query"
        ],
        "additionalFields": {
          "download": true
        }
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        240,
        300
      ],
      "id": "a1b2c3d4-1234-5678-9abc-def012345678",
      "name": "Telegram Trigger",
      "credentials": {
        "telegramApi": {
          "id": "p4dTUZho7h1VsmzM",
          "name": "Tg Ozon.Orders bot"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Extract user data\nconst message = $json.message;\nconst callback = $json.callback_query;\n\nconst userId = message?.from?.id || callback?.from?.id;\nconst chatId = message?.chat?.id || callback?.message?.chat?.id;\nconst messageText = message?.text || '';\nconst callbackData = callback?.data || '';\nconst document = message?.document || null;\n\nreturn [{\n  json: {\n    user_id: String(userId),\n    chat_id: String(chatId),\n    message_text: messageText,\n    callback_data: callbackData,\n    document: document\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        460,
        300
      ],
      "id": "b2c3d4e5-2345-6789-abcd-ef0123456789",
      "name": "Extract User Data"
    },
    {
      "parameters": {
        "operation": "get",
        "key": "=ozon:acl:whitelist:{{ $json.user_id }}",
        "propertyName": "value"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        680,
        300
      ],
      "id": "c3d4e5f6-3456-7890-bcde-f01234567890",
      "name": "Check Whitelist",
      "credentials": {
        "redis": {
          "id": "kaA0Glj8bB5pwqRt",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "condition1",
              "leftValue": "={{ $json.is_whitelisted }}",
              "rightValue": "true",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        900,
        300
      ],
      "id": "d4e5f6a7-4567-8901-cdef-012345678901",
      "name": "Is Authorized?"
    },
    {
      "parameters": {
        "chatId": "={{ $('Extract User Data').item.json.chat_id }}",
        "text": "‚õî –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –í—ã –Ω–µ –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ.\n\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞.",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1120,
        460
      ],
      "id": "e5f6a7b8-5678-9012-def0-123456789012",
      "name": "Unauthorized Response",
      "credentials": {
        "telegramApi": {
          "id": "p4dTUZho7h1VsmzM",
          "name": "Tg Ozon.Orders bot"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "key": "=ozon:acl:admins:{{ $('Extract User Data').item.json.user_id }}",
        "propertyName": "value"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1120,
        140
      ],
      "id": "f6a7b8c9-6789-0123-ef01-234567890123",
      "name": "Check Admin",
      "credentials": {
        "redis": {
          "id": "kaA0Glj8bB5pwqRt",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "cond-start",
                    "leftValue": "={{ $('Extract User Data').item.json.message_text }}",
                    "rightValue": "/start",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Start"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "cond-csv",
                    "leftValue": "={{ $('Extract User Data').item.json.document?.mime_type }}",
                    "rightValue": "text/csv",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CSV"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "cond-menu",
                    "leftValue": "={{ $('Extract User Data').item.json.callback_data }}",
                    "rightValue": "menu:",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Menu"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "cond-date",
                    "leftValue": "={{ $('Extract User Data').item.json.callback_data }}",
                    "rightValue": "date:",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "DateSelection"
            }
          ]
        },
        "options": {
          "fallbackOutput": "none"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1340,
        140
      ],
      "id": "a7b8c9d0-7890-1234-f012-345678901234",
      "name": "Route Message"
    },
    {
      "parameters": {
        "jsCode": "const chatId = $('Extract User Data').item.json.chat_id;\nconst isAdmin = $('Check Admin').item.json.value === '1';\n\nconst keyboard = {\n  inline_keyboard: [\n    [{text: 'üì¶ –ó–∞–∫–∞–∑—ã', callback_data: 'menu:orders'}],\n    [{text: 'üéØ –ö–ª–∞—Å—Ç–µ—Ä—ã', callback_data: 'menu:clusters'}]\n  ]\n};\n\nif (isAdmin) {\n  keyboard.inline_keyboard.push([{text: '‚öôÔ∏è –ê–¥–º–∏–Ω–∫–∞', callback_data: 'menu:admin'}]);\n}\n\nreturn [{\n  json: {\n    chat_id: chatId,\n    text: 'ü§ñ **Ozon Analytics Bot**\\n\\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:',\n    reply_markup: keyboard\n  }\n}];"
      },
      "type": "n8n-nodes-base.code"