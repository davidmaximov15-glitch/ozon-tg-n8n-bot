{
  "name": "ttl_guard_for_user",
  "nodes": [
    {
      "parameters": {},
      "id": "b2c3d4e5-0001-0000-0000-000000000001",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [0, 0]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1",
              "name": "userId",
              "value": "={{ $json.userId }}",
              "type": "string"
            },
            {
              "id": "2",
              "name": "now",
              "value": "={{ Math.floor(Date.now() / 1000) }}",
              "type": "number"
            },
            {
              "id": "3",
              "name": "ttl_seconds",
              "value": "=86400",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "id": "b2c3d4e5-0001-0000-0000-000000000002",
      "name": "Extract User & TTL",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [200, 0]
    },
    {
      "parameters": {
        "operation": "get",
        "key": "=files:{{ $json.userId }}",
        "options": {}
      },
      "id": "b2c3d4e5-0001-0000-0000-000000000003",
      "name": "Get Files Session",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [400, -100],
      "credentials": {
        "redis": {
          "id": "LbugIO49LKl0p0wh",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "key": "=selectedDates:{{ $json.userId }}",
        "options": {}
      },
      "id": "b2c3d4e5-0001-0000-0000-000000000004",
      "name": "Get Selected Dates",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [400, 0],
      "credentials": {
        "redis": {
          "id": "LbugIO49LKl0p0wh",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "key": "=message_id:{{ $json.userId }}",
        "options": {}
      },
      "id": "b2c3d4e5-0001-0000-0000-000000000005",
      "name": "Get Message ID",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [400, 100],
      "credentials": {
        "redis": {
          "id": "LbugIO49LKl0p0wh",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Check TTL based on createdAt timestamp\nconst data = $input.item.json;\nconst now = data.now;\nconst ttl = data.ttl_seconds;\n\nlet shouldClean = false;\n\ntry {\n  if (data.value) {\n    const parsed = JSON.parse(data.value);\n    if (parsed.createdAt) {\n      const age = now - parsed.createdAt;\n      shouldClean = age > ttl;\n    }\n  }\n} catch (e) {\n  // Legacy key without createdAt - keep it\n}\n\nreturn {\n  json: {\n    userId: data.userId,\n    shouldClean: shouldClean,\n    keyType: data.keyType || 'unknown'\n  }\n};"
      },
      "id": "b2c3d4e5-0001-0000-0000-000000000006",
      "name": "Check TTL",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [600, 0]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "1",
              "leftValue": "={{ $json.shouldClean }}",
              "rightValue": "=true",
              "operator": {
                "type": "boolean",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "b2c3d4e5-0001-0000-0000-000000000007",
      "name": "Should Clean?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [800, 0]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=files:{{ $json.userId }}",
        "options": {}
      },
      "id": "b2c3d4e5-0001-0000-0000-000000000008",
      "name": "Delete Files Session",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [1000, -100],
      "credentials": {
        "redis": {
          "id": "LbugIO49LKl0p0wh",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=selectedDates:{{ $json.userId }}",
        "options": {}
      },
      "id": "b2c3d4e5-0001-0000-0000-000000000009",
      "name": "Delete Selected Dates",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [1000, 0],
      "credentials": {
        "redis": {
          "id": "LbugIO49LKl0p0wh",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=message_id:{{ $json.userId }}",
        "options": {}
      },
      "id": "b2c3d4e5-0001-0000-0000-000000000010",
      "name": "Delete Message ID",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [1000, 100],
      "credentials": {
        "redis": {
          "id": "LbugIO49LKl0p0wh",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "content": "## TTL Guard for User\n\nSoft TTL implementation:\n- Checks createdAt timestamps\n- Cleans expired sessions (24h)\n- Preserves legacy keys\n\nCall periodically or on user access.",
        "height": 200,
        "width": 300
      },
      "id": "b2c3d4e5-0001-0000-0000-000000000099",
      "name": "Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [0, -200]
    }
  ],
  "connections": {
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Extract User & TTL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract User & TTL": {
      "main": [
        [
          {
            "node": "Get Files Session",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Selected Dates",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Message ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Files Session": {
      "main": [
        [
          {
            "node": "Check TTL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Selected Dates": {
      "main": [
        [
          {
            "node": "Check TTL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Message ID": {
      "main": [
        [
          {
            "node": "Check TTL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check TTL": {
      "main": [
        [
          {
            "node": "Should Clean?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should Clean?": {
      "main": [
        [
          {
            "node": "Delete Files Session",
            "type": "main",
            "index": 0
          },
          {
            "node": "Delete Selected Dates",
            "type": "main",
            "index": 0
          },
          {
            "node": "Delete Message ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-10-07T00:00:00.000Z",
  "versionId": "00000000-0000-0000-0000-000000000001"
}
