# Цель
Собрать готовый шаблон n8n (v1.113.3) для Telegram‑бота (Bot API v9.2), который принимает CSV‑отчёты заказов Ozon по FBO/FBS, распознаёт тип отчёта, даёт интерактивный выбор дат и часовых диапазонов, считает нужную статистику и показывает сравнения между датами. Поддержать RBAC (белый список), Админку, хранение состояния/кэшей в Redis, масштабируемую архитектуру и удобный UX прямо в Telegram.

---

# Ключевые возможности
1. **Приём CSV**: пользователь отправляет CSV файлом в чат боту. Бот:
   - определяет тип отчёта (**FBO** / **FBS**);
   - парсит обе структуры, нормализует в единую модель;
   - извлекает список доступных дат (из данных).
2. **Фильтры**: 
   - выбор **1–3 дат** (закладка на будущее — без ограничения);
   - выбор **часового окна** с шагом 30 мин (например `00:00–13:00`).
3. **Статистика «Заказы»**:
   - для 1 даты: общее число заказов, по артикулу; число отмен (включая возвраты); **средняя цена продажи** по правилам ниже; **сумма заказов** по артикулу и итого;
   - для 2+ дат: то же, плюс **сравнение по артикулу и по итого**: прирост/убыль в шт. и % к предыдущей дате.
4. **Разделы**:
   - **«Заказы»** — выдаёт статистику;
   - **«Кластеры»** — заглушка (показывает, что раздел в разработке).
5. **Доступ**:
   - бот отвечает только списку разрешённых пользователей (**whitelist**);
   - «супер‑админы» хардкожены в n8n env;
   - админы (назначаемые) могут управлять whitelist через кнопку **«Админка»**.
6. **Хранилище**: Redis используется для session‑state, кэшей, throttle, хранения пользовательских выборов и прав.

---

# Архитектура
**Компоненты**:
- **Telegram Bot (Bot API 9.2)**: webhook → вход в n8n.
- **n8n (1.113.3)**: основной оркестратор.
- **Redis**: key‑value для состояния/прав/кэша.

**Потоки**:
1) **/start или сообщение** → n8n Webhook → проверка пользователя (Redis/ENV) → показ главного меню.
2) **Отправка CSV** → загрузка файла → парс → нормализация → сохранение нормализованных данных в Redis (с TTL) → вывод доступных дат.
3) **Выбор дат** → **Выбор часов** → расчёт и вывод статистики.
4) **Админка**: CRUD по пользователям/админам.

---

# Доступ и безопасность
- **Белый список**: только user_id из `ozon:acl:whitelist` получают ответы.
- **Супер‑админы**: в `.env` n8n: `SUPER_ADMINS=12345,67890`.
- **Админы**: `ozon:acl:admins` (множество). Админ видит кнопку **«Админка»**.
- **Анти‑спам/флуд**: Redis rate‑limit (например, 10 действий/мин на пользователя).
- **Валидация CSV**: размер ≤ 20MB, MIME/расширение, колонки.

---

# Форматы данных

## CSV структура (ФБО/ФБС)
- **FBO**:
  - `order_id` — столбец A («Номер заказа»)
  - `sku` — столбец G (уникальный артикул)
  - `quantity` — столбец I (кол-во, может быть >1)
  - `price` — столбец N (индекс 13)
  - `created_at` — поле даты/времени (UTC)
  - `status` — поле статуса

- **FBS**:
  - `order_id` — («№ заказа»)
  - `sku` — (артикул продавца, см. структуру FBS)
  - `quantity` — поле количества (найти аналог столбца I из FBO)
  - `price` — столбец с ценой за единицу
  - `created_at` — поле даты/времени (UTC)
  - `status` — поле статуса

---

# Правила агрегации и расчётов
- **Возвраты включаются в отмены**.
- **Средняя цена продажи (avgM)**:
  - берётся из FBO/FBS отчётов:
    - Цена: столбец N (ORDERS_PRICE_COL_IDX = 13)
    - Кол-во: столбец R (ORDERS_QUANTITY_COL_IDX = 17)
  - Считается как средневзвешенная по количеству для статусов, идущих в выручку: «Доставлен», «Доставляется», «Ожидает сборки», «Ожидает отгрузки».
- **Количество заказов по артикулу**: сумма `quantity` по строкам в заданном интервале времени (кол-во может быть >1 в строке).
- **Статусы**:
  - В «отмены» входят `отменён`, `возврат`.
  - В «выручку» входят `доставлен`, `доставляется`, `ожидает сборки`, `ожидает отгрузки`.

---

# Временные зоны
- Данные из отчётов (FBO/FBS) содержат время в **UTC**.
- Пользователь задаёт диапазон дат/часов в **московском времени (MSK, Europe/Moscow)**.
- Код конвертирует UTC → MSK для сопоставления с выбором пользователя.

---

# Вывод отчётов
- 1 дата: выводится количество заказов по каждому артикулу, число отмен (включая возвраты), средняя цена продажи, сумма заказов.
- 2+ даты: дополнительно расчёт прироста/убыли по количеству и % относительно предыдущей даты.

---

# UX и управление
**Главное меню**: кнопки «Заказы», «Кластеры», «Админка» (для админов).

**Заказы**:
- Загрузка CSV
- Выбор дат
- Выбор интервала времени (шаг 30 мин)
- Вывод отчёта

**Кластеры**: заглушка.

**Админка**: управление whitelist и админами.

---

# Redis ключи
- `ozon:dataset:{chat_id}:{session_id}` — JSON датасета, TTL=72h
- `ozon:session:{chat_id}` — выбор дат/времени, TTL=24h
- `ozon:acl:whitelist` — Set(user_id)
- `ozon:acl:admins` — Set(user_id)
- `ozon:acl:superadmins` — Set(user_id)
- `ozon:audit:{YYYY-MM-DD}` — события админов

---

# Чек‑лист деплоя
1. Создать бота и получить TOKEN.
2. Настроить webhook Telegram → n8n Webhook URL.
3. Поднять Redis, прописать `REDIS_URL`.
4. Импортировать workflow .json в n8n, заполнить креды Telegram.
5. Прописать `SUPER_ADMINS` в .env и выполнить инициализацию ключей.
6. Протестировать загрузку CSV, выбор дат/часов, отчёты, Админку.

---

# Открытые вопросы — решено
- **Возвраты**: включаем в отмены.
- **Цена**: берём из столбца N (ORDERS_PRICE_COL_IDX = 13), считаем средневзвешенную по столбцу R.
- **Артикул**: для FBO — столбец G; для FBS — использовать артикул продавца (см. структуру FBS).
- **Количество**: FBO — столбец I; FBS — аналогичное поле количества.
- **Таймзона**: отчёты → UTC, пользовательский ввод → MSK (Europe/Moscow).
- **Агрегации по брендам/категориям**: не нужны в этой версии.

---

# Примеры CSV (эталонные)

## FBO пример
```
A: Номер заказа | G: Артикул | I: Количество | N: Цена | R: Кол-во (для avg) | Статус | Дата создания (UTC)
123456 | ABC-001 | 2 | 1190 | 2 | Доставлен | 2025-09-18 10:00:00
123457 | ABC-001 | 1 | 1190 | 1 | Отменён | 2025-09-18 11:00:00
123458 | ABC-002 | 3 | 990  | 3 | Ожидает отгрузки | 2025-09-18 12:00:00
```

## FBS пример
```
№ заказа | Артикул продавца | Кол-во | Цена | Дата создания (UTC) | Статус
987654 | XYZ-777 | 1 | 990 | 2025-09-18 08:10:00 | Доставляется
987655 | XYZ-777 | 2 | 990 | 2025-09-18 09:05:00 | Возврат
987656 | XYZ-888 | 1 | 1590 | 2025-09-18 10:00:00 | Создан
```

---

# Итог
Документация доработана: учтены возвраты, уточнены поля для цены, артикула и количества, зафиксированы правила работы с таймзоной, добавлены эталонные CSV‑примеры для FBO и FBS. Убрано планирование по срокам, так как реализацию выполняет AI‑агент.
